/*---------------------------------------------------------------------------

    (c) 2004 Scorpio Software
        19 Wittama Drive
        Glenmore Park
        Sydney NSW 2745
        Australia

-----------------------------------------------------------------------------

    $Workfile::                                                           $
    $Revision::                                                           $
        $Date::                                                           $
      $Author::                                                           $

---------------------------------------------------------------------------*/
//---------------------------------------------------------------------------
#ifndef CodeEditorH
#define CodeEditorH
//-- APP --------------------------------------------------------------------
#include "ZXFileManager.h"
#include "ZXPlugin.h"
#include "ZXBasePlugin.h"
#include "ZXParserManager.h"
#include "ZXParserPluginInfo.h"
//---------------------------------------------------------------------------
using namespace Scorpio;
using namespace Plugin;
//- COMMON PLUGIN INTERFACES ------------------------------------------------
typedef int    (WINAPI *StdCallPtr          )(void                                                              );
//- HELPER PLUGIN INTERFACES ------------------------------------------------
typedef HRESULT(WINAPI *GetExecutePtr       )(void                                                              );
//---------------------------------------------------------------------------
// Plugin Class
/**
 * @class   ZXCodeEditor class
 * @brief   This class was generated by the KiwiWare Plugin Wizard.
 * @brief   It is the basis for constructing a KiwiWare compatible plugin.
 * @author  KiwiWare Plugin Wizard
 * @date    Created 17 December 2001 by Tony Thompson
 * @remarks Copyright KiwiWare 2001
 */
//---------------------------------------------------------------------------
class ZXCodeEditor : public ZXBasePlugin
{
private:
    typedef struct
    {
        ZXPlugin*               pPlugin;
        String                  sSignature;
        // interfaces
        GetExecutePtr           pExecuteFunc;
        GetDescriptionPtr       pDescriptionFunc;
    } ZXToolPluginInfo;
    typedef std::vector<ZXToolPluginInfo*> ZXToolPluginInfoVector;

            void    __fastcall  GetParserInterfaces(ZXPlugin* Plugin);
            void    __fastcall  OrganisePlugins(void);

private:
    bool                        m_bDirty;
    ZXFileManager               m_FileManager;
    ZXParserManager             m_ParserManager;

    ZXParserPluginInfoVector    m_ParserPlugins;
    ZXToolPluginInfoVector      m_ToolPlugins;


public:
                    __fastcall  ZXCodeEditor();
                    __fastcall ~ZXCodeEditor();

            HRESULT __fastcall  InitialisePlugin        (ZXPlugin* pPlugin);
            HRESULT __fastcall  ReleasePlugin           (void);
            void    __fastcall  RegisterEvents          (void);

    ZXParserPluginInfoVector*    __fastcall  GetParsers  (void);

    // Events
    static  HRESULT WINAPI      EventDelete             (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventEditCopy           (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventEditCut            (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventEditPaste          (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventSaveQuery          (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventXmlNew             (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventXmlPostLoad        (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventXmlPreSave         (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventXmlUpdate          (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventQueryEditFeatures  (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventFind               (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventFindReplace        (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventFindNext           (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventFindPrevious       (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventKeyPanel           (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
    static  HRESULT WINAPI      EventPlayGame           (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
};
//---------------------------------------------------------------------------
ZXBasePlugin* NewPluginClass(void);
//---------------------------------------------------------------------------
#endif
