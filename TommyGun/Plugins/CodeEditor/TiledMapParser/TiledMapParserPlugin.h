/*---------------------------------------------------------------------------

    (c) 2004 Scorpio Software
        19 Wittama Drive
        Glenmore Park
        Sydney NSW 2745
        Australia

-----------------------------------------------------------------------------

    $Workfile::                                                           $
    $Revision::                                                           $
        $Date::                                                           $
      $Author::                                                           $

---------------------------------------------------------------------------*/
//---------------------------------------------------------------------------
#ifndef TiledMapParserPluginH
#define TiledMapParserPluginH
//---------------------------------------------------------------------------
#include <map>
#include "ZXBasePlugin.h"
//---------------------------------------------------------------------------
using namespace Scorpio;
using namespace Plugin;
//using namespace CodeEditor;
//---------------------------------------------------------------------------
// Plugin Class
/**
 * @class   TiledMapParser class
 * @brief   This class was generated by the KiwiWare Plugin Wizard.
 * @brief   It is the basis for constructing a KiwiWare compatible plugin.
 * @author  KiwiWare Plugin Wizard
 * @date    Created 17 December 2001 by Tony Thompson
 * @remarks Copyright Scorpio Software 2001
 */
//---------------------------------------------------------------------------
class TiledMapParserPlugin : public ZXBasePlugin
{
private:
    typedef std::map<String, int>   TTileMap;

    TTileMap                m_TilesMap;
    std::vector<String>     m_sTiles;

private:
    void        __fastcall  BuildTilesMap(KXmlInfo*& XmlData);
    HRESULT     __fastcall  ParseMap(KXmlInfo*& XmlData, TStringList*& Code);
    String      __fastcall  NumToStr(unsigned char iNum, char cPrefix = ' ');
    void        __fastcall  GetScreenProperties(KXmlInfo*& XmlData);
    void        __fastcall  ParseScreen(KXmlInfo*& XmlData, TStringList*& Code);
    int         __fastcall  GetTileIndex(const String& sName);


    std::vector<String>     m_MapTable;     // list of screens that make up the map table
    int                     m_iAcross;      // number of screens across
    int                     m_iDown;        // number of screens down
    String                  m_sMapName;     // map table name
    String                  m_sPrefix;      // screen prefix name
    bool                    m_ConvertX;     // convert x co-ord to char
    bool                    m_ConvertY;     // convert y co-ord to char

public:
                __fastcall  TiledMapParserPlugin();
                __fastcall ~TiledMapParserPlugin();

    HRESULT     __fastcall  InitialisePlugin    (ZXPlugin* pPlugin);
    HRESULT     __fastcall  ReleasePlugin       (void);
    void        __fastcall  RegisterEvents      (void);

    HRESULT     __fastcall  GetOptionsPanel(TPanel*& Panel);
    HRESULT     __fastcall  GetResourceTypes(KXmlInfo*& XmlData, TStringList*& Types);
    HRESULT     __fastcall  GetResourcesList(KXmlInfo*& XmlData, const String& sType, TStringList*& Resources);
    HRESULT     __fastcall  ParseResources(KXmlInfo*& XmlData, String& Resource, TStringList*& Code, String& ParserData);

    // Events
    //static  HRESULT WINAPI      EventSaveQuery      (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
};
//---------------------------------------------------------------------------
TiledMapParserPlugin* NewPluginClass(void);
//---------------------------------------------------------------------------
#endif
