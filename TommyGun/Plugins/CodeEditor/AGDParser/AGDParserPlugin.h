/*---------------------------------------------------------------------------

    (c) 2004 Scorpio Software
        19 Wittama Drive
        Glenmore Park
        Sydney NSW 2745
        Australia

-----------------------------------------------------------------------------

    $Workfile::                                                           $
    $Revision::                                                           $
        $Date::                                                           $
      $Author::                                                           $

---------------------------------------------------------------------------*/
//---------------------------------------------------------------------------
#ifndef AGDParserPluginH
#define AGDParserPluginH
//---------------------------------------------------------------------------
#include <map>
#include "ZXBasePlugin.h"
//---------------------------------------------------------------------------
using namespace Scorpio;
using namespace Plugin;
//using namespace CodeEditor;
enum eNumberBase    { nbDecimal, nbHexidecimal, nbBinary, nbOctal, nbDefault };
//---------------------------------------------------------------------------
// Plugin Class
/**
 * @class   AGDParser class
 * @brief   This class was generated by the KiwiWare Plugin Wizard.
 * @brief   It is the basis for constructing a KiwiWare compatible plugin.
 * @author  KiwiWare Plugin Wizard
 * @date    Created 17 December 2001 by Tony Thompson
 * @remarks Copyright Scorpio Software 2001
 */
//---------------------------------------------------------------------------
class AGDParserPlugin : public ZXBasePlugin
{
private:
    typedef std::map<String, int>   TTileAGD;

    TTileAGD                m_TilesAGD;
    std::vector<String>     m_sTiles;

private:
    void        __fastcall  ParseSettings(KXmlInfo*& XmlData, TStringList*& Code);
    void        __fastcall  ParseStrings(KXmlInfo*& XmlData, TStringList*& Code);
    void        __fastcall  ParseScreens(KXmlInfo*& XmlData, TStringList*& Code);
    void        __fastcall  ParseSprites(KXmlInfo*& XmlData, TStringList*& Code);
    void        __fastcall  ParseSounds(KXmlInfo*& XmlData, TStringList*& Code);
    void        __fastcall  ParseObjects(KXmlInfo*& XmlData, TStringList*& Code);
    void        __fastcall  ParseTiles(KXmlInfo*& XmlData, TStringList*& Code);
    void        __fastcall  ParseEvents(KXmlInfo*& XmlData, TStringList*& Code);
    int         __fastcall  DeleteLines(TStringList*& Code, const AnsiString& s1,const AnsiString& s2, int maxLines = -1);
    AnsiString  __fastcall  NumToStr(int number, int len, bool leftAlign = false);
    void        __fastcall  ConvertStringToData(unsigned char* pData, const AnsiString& sData, bool bInvertByte);

public:
                __fastcall  AGDParserPlugin();
                __fastcall ~AGDParserPlugin();

    HRESULT     __fastcall  InitialisePlugin    (ZXPlugin* pPlugin);
    HRESULT     __fastcall  ReleasePlugin       (void);
    void        __fastcall  RegisterEvents      (void);

    HRESULT     __fastcall  GetOptionsPanel(TPanel*& Panel);
    HRESULT     __fastcall  GetResourceTypes(KXmlInfo*& XmlData, TStringList*& Types);
    HRESULT     __fastcall  GetResourcesList(KXmlInfo*& XmlData, const String& sType, TStringList*& Resources);
    HRESULT     __fastcall  ParseResources(KXmlInfo*& XmlData, String& Resource, TStringList*& Code, String& ParserData);

    // Events
    //static  HRESULT WINAPI      EventSaveQuery      (ZXEventManager* EventManager, LPDATA lpData, DWORD dwParam, DWORD dwArg);
};
//---------------------------------------------------------------------------
AGDParserPlugin* NewPluginClass(void);
//---------------------------------------------------------------------------
#endif
